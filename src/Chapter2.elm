module Chapter2 exposing (chapter2)

import Component exposing (..)

chapter2 : Component
chapter2 =
    [ chapterTitle "2 Haskell学習にあたって"

    , chaptSection "2.1 Haskellの概要"
    , txt "Haskellは強い静的型付けを行う純粋関数型プログラミング言語である。"
    , txt "登場時期は1990年頃と、歴史のある言語である。"
    , txt "PythonやJavaなどと同じように汎用的な言語であるが、学習コストが極めて高いことで知られている。"
    , txt "言語機能が豊富かつ、プログラムの信頼性・保守性が高いため、金融業界で採用された事例もある。"

    , chaptSection "2.2 Haskellを学ぶ理由"
    , txt "Haskellは万人受けするような言語ではなく、学習コストも高いため、残念ながら避けられがちである。"
    , txt "しかし、筆者は、プログラミング経験者・初学者に関わらず、Haskellを学ぶことには十分な意義があると主張する。"
    , txt "これを主張するにあたって、Haskellを学ぶことによって得られるものを考える。"
    , txt "自明なものとして、多少難解なコンピューターサイエンスの概念に対する理解である。"
    , txt "Haskellではモナドをはじめとした、他のプログラミング言語では滅多に登場しない概念を学び、使っていく必要がある。"
    , txt "これは決して簡単ではなく、Haskellに対する難しいという印象を強める一因であるが、他の言語で応用し、プログラムをより良くできる可能性は大きい。"
    , txt "次に、プログラムの透明性を求める習慣が身につくことであろう。"
    , txt "ここでいう透明性とは、プログラムの挙動を隅から隅まで把握できる可能性のことである。"
    , txt "Haskellでは、純粋関数型プログラミングと遅延評価の考え方によって、意図しない挙動というものは滅多に起きない。"
    , txt "そして、どのようにしてそれらが防がれているのかを学習できる、素晴らしい機会である。"
    , txt "もちろん、これは他の言語に応用可能であり、プログラムの品質を上げることができるだろう。"
    , txt "以上より、Haskellはプログラミングの教養として、非常に有用であるといえるだろう。"
    , txt "加えて、Haskellをシステム開発に用いることも、特に信頼性が求められる場面で有用である。"

    , chaptSection "2.3 Haskellは難しくない"
    , txt "Haskellは難しい言語であるという主張は、部分的に正しいが、誤解を招く可能性がある。"
    , txt "Haskellの難しい点は習得であって、Haskellでプログラミングを行うこと自体は決して難しくない。"
    , txt "確かに、他言語では馴染みのないモナドのような概念を使いながらプログラミングを行うことは、最初は難しいだろう。"
    , txt "しかし、それらにある程度慣れていくと、それらによってもたらされていた恩恵のほうが目立つようになる。"
    , txt "プログラムの安全性の大部分を、コンピューターに保証させることができるのである。"
    , txt "この恩恵は極めて絶大であり、現に筆者はHaskellほどバグのないプログラムを記述できる言語を知らない。"
    , txt "あまりにもバグが起きないことで恐怖を感じた経験さえある。"
    , txt "したがって、Haskellの難しい点は慣れることであり、一度慣れてしまえば、他の言語以上に快適で安全なプログラミングを行うことができるだろう。"
    ]
